/* Universal Selector */
* {
    padding: 0;
    margin: 0;
}

:root {
    /* arbeitet/definiert global */
    --divsBG: rgb(255, 225, 93);
    /* hier wird eine variable definiert */
}

.el {
    background: var(--divsBG);
}

.body {
    /* background: red;  (der background war rot also habe wir dies gelöscht und als kommentar hier gelassen)*/
    height: 100vh;
    display: grid;
    /* grid layout = alle elemente bekommen gleich viel fläche von der Webseite verteilt (untereinnander aufgelistet; benutzt ganze breite) */
    grid-template-columns: repeat(12, 1fr);
    /* colums sind die spalten pro 1fr wird eine neue spalte erstellt, repeat ist eine funktion 12 mal 1fr, 1fr und 1fr bedeutet beide spalten bekommen 50% der breite der Seite*/
    grid-template-rows: repeat(12, 1fr);
    /* rows sind die zeilen pro 1fr wird eine neue zeile erstellt, repeat ist eine funktion 12 mal 1fr, 1fr und 1fr bedeutet beide zeilen bekommen 50% der höhe*/
}

.NavBar {
    grid-column: 1 / span 12;
    /* fang in der ersten spalte an und verlauf 12te spalten lang */
    grid-row: 1 / span 1;
    /* fang in der ersten zeile an und eine spalte lang */
}

.Footer {
    /* hier habe ich es verstanden */
    /*----------------------------------------------------------*/
    grid-column: 1 / span 12;
    /* fang in der ersten spalte an und dupliziere dich 12 mal ; die erste spalte gehört mit zu den dupplikaten*/
    grid-row: 12 / span 1;
    /* fang in der 12te zeile an und dupliziere dich ein mal ; die erste zeile gehört mit zu den dupplikaten*/
}

.LeftPanel {
    grid-column: 1 / span 2;
    grid-row: 2 / span 10;
}

.RightPanel {
    grid-column: 11 / span 2;
    grid-row: 2 / span 10;
}

.Content {
    grid-column: 3 / span 8;
    grid-row: 2 / span 10;
}